{"version":3,"sources":["components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","pathname","list","map","quote","NoQuotesFound","noquotes","AllQuotes","useHTTP","getAllQuotes","sendRequest","status","loadedQuotes","data","error","useEffect","LoadingSpinner","length"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,KAAO,0B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,mBCA3DD,EAAOC,QAAU,CAAC,SAAW,kC,wFCkBdC,EAdG,SAACC,GAChB,OACG,qBAAIC,UAAWC,IAAQC,KAAvB,UACG,mCACG,qCACG,4BAAIH,EAAMI,SAEb,qCAAaJ,EAAMK,YAEtB,cAAC,IAAD,CAAMJ,UAAU,MAAMK,GAAE,kBAAaN,EAAMO,IAA3C,iC,iBCkCMC,EAhCG,SAACR,GAChB,IAXiBS,EAAQC,EAWnBC,EAAUC,cACVC,EAAWC,cAGXC,EAAiD,QADnC,IAAIC,gBAAgBH,EAASI,QACVC,IAAI,QAErCC,GAjBWV,EAiBeT,EAAMS,OAjBbC,EAiBqBK,EAhBvCN,EAAOW,MAAK,SAACC,EAAQC,GACzB,OAAIZ,EACMW,EAAOd,GAAKe,EAAOf,GAAK,GAAK,EAE7Bc,EAAOd,GAAKe,EAAOf,GAAK,GAAK,MAuB1C,OACG,eAAC,WAAD,WACG,qBAAKN,UAAWC,IAAQqB,QAAxB,SACG,yBAAQC,QAZY,WAG1Bb,EAAQc,KAAK,CACVC,SAAUb,EAASa,SACnBT,OAAO,SAAD,OAAYF,EAAqB,OAAS,UAO7C,kBAA6CA,EAAqB,aAAe,iBAEpF,oBAAId,UAAWC,IAAQyB,KAAvB,SACIR,EAAaS,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CAA0BtB,GAAIsB,EAAMtB,GAAIF,OAAQwB,EAAMxB,OAAQD,KAAMyB,EAAMzB,MAA1DyB,EAAMtB,a,yBC3BtBuB,EATO,WACnB,OACG,sBAAK7B,UAAWC,IAAQ6B,SAAxB,UACG,iDACA,cAAC,IAAD,CAAM9B,UAAU,MAAMK,GAAG,aAAzB,6B,gBCgCM0B,UAhCG,WACf,MAA2DC,YAAQC,KAAc,GAAzEC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAAcC,EAAnC,EAA6BC,KAAoBC,EAAjD,EAAiDA,MAMjD,OAJAC,qBAAU,WACPL,MACA,CAACA,IAEU,YAAXC,EAEG,qBAAKnC,UAAU,WAAf,SACG,cAACwC,EAAA,EAAD,MAKNF,EAEG,mBAAGtC,UAAU,mBAAb,SAAiCsC,IAIzB,cAAXH,GAA4BC,GAAwC,IAAxBA,EAAaK,OAOzD,cAAC,EAAD,CAAWjC,OAAQ4B,IALhB,cAAC,EAAD","file":"static/js/5.821d83d1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2dOvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3pzcl\",\"sorting\":\"QuoteList_sorting__rL6H1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3DIYb\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n   return (\n      <li className={classes.item}>\n         <figure>\n            <blockquote>\n               <p>{props.text}</p>\n            </blockquote>\n            <figcaption>{props.author}</figcaption>\n         </figure>\n         <Link className='btn' to={`/quotes/${props.id}`}>View Fullscreen</Link>\n      </li>\n   );\n};\n\nexport default QuoteItem;","import React, { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n   return quotes.sort((quoteA, quoteB) => {\n      if (ascending) {\n         return quoteA.id > quoteB.id ? 1 : -1;\n      } else {\n         return quoteA.id < quoteB.id ? 1 : -1;\n      };\n   });\n};\n\nconst QuoteList = (props) => {\n   const history = useHistory();\n   const location = useLocation();\n\n   const queryParams = new URLSearchParams(location.search);\n   const isSortingAscending = queryParams.get('sort') === 'asc';\n\n   const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n   const changeSortingHandler = () => {\n      // history.push(`${location.pathname}?sort=${(isSortingAscending ? 'desc' : 'asc')}`);\n\n      history.push({\n         pathname: location.pathname,\n         search: `?sort=${(isSortingAscending ? 'desc' : 'asc')}`\n      });\n   };\n\n   return (\n      <Fragment>\n         <div className={classes.sorting}>\n            <button onClick={changeSortingHandler}>Sort {isSortingAscending ? 'Descending' : 'Ascending'}</button>\n         </div>\n         <ul className={classes.list}>\n            {sortedQuotes.map((quote) => (\n               <QuoteItem key={quote.id} id={quote.id} author={quote.author} text={quote.text}/>\n            ))}\n         </ul>\n      </Fragment>\n   );\n};\n\nexport default QuoteList;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n   return (\n      <div className={classes.noquotes}>\n         <p>No quotes found!</p>\n         <Link className=\"btn\" to=\"/new-quote\">Add a Quote</Link>\n      </div>\n   );\n};\n\nexport default NoQuotesFound;","import React, { useEffect } from 'react';\n\nimport QuoteList from '../components/quotes/QuoteList';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\n\nimport useHTTP from '../hooks/use-http';\nimport { getAllQuotes } from '../lib/api';\n\nconst AllQuotes = () => {\n   const { sendRequest, status, data: loadedQuotes, error } = useHTTP(getAllQuotes, true);\n\n   useEffect(() => {\n      sendRequest()\n   }, [sendRequest]);\n\n   if(status === 'pending') {\n      return(\n         <div className=\"centered\">\n            <LoadingSpinner />\n         </div>\n      );\n   };\n\n   if(error) {\n      return(\n         <p className=\"centered focused\">{error}</p>\n      );\n   };\n\n   if(status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\n      return(\n         <NoQuotesFound />\n      );\n   };\n\n   return (\n      <QuoteList quotes={loadedQuotes} />\n   );\n};\n\nexport default AllQuotes;"],"sourceRoot":""}