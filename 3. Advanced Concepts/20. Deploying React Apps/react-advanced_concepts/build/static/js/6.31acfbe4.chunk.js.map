{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","useState","isEntering","setIsEntering","authorInputRef","useRef","textInputRef","when","message","location","form","onFocus","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","NewQuote","useHTTP","addQuote","sendRequest","status","history","useHistory","useEffect","push","quoteData"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,yFCOtHC,EAJF,SAACC,GACX,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,yBCmDhCC,EAjDG,SAACL,GAChB,MAAoCM,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACMC,EAAiBC,mBACjBC,EAAeD,mBAkBrB,OACG,eAAC,WAAD,WACG,cAAC,IAAD,CAAQE,KAAML,EAAYM,QAAS,SAACC,GAAD,MAAc,yEACjD,cAAC,EAAD,UACG,uBAAMb,UAAWC,IAAQa,KAAMC,QAZb,WACxBR,GAAc,IAWoDS,SApBrE,SAA2BC,GACxBA,EAAMC,iBACN,IAAMC,EAAgBX,EAAeY,QAAQC,MACvCC,EAAcZ,EAAaU,QAAQC,MAEzCtB,EAAMwB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,KAe1C,UACIvB,EAAM2B,WACJ,qBAAK1B,UAAWC,IAAQ0B,QAAxB,SACA,cAACC,EAAA,EAAD,MAIH,sBAAK5B,UAAWC,IAAQ4B,QAAxB,UACG,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKzB,OAEvC,sBAAKR,UAAWC,IAAQ4B,QAAxB,UACG,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKvB,OAErC,qBAAKV,UAAWC,IAAQkC,QAAxB,SACG,wBAAQnC,UAAU,MAAMoC,QAxBT,WAC3B7B,GAAc,IAuBF,kC,gBCrBH8B,UAnBE,WACd,MAAgCC,YAAQC,KAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OACfC,EAAUC,cAEhBC,qBAAU,WACO,cAAXH,GACAC,EAAQG,KAAK,aAEhB,CAACJ,EAAQC,IAMZ,OACG,cAAC,EAAD,CAAWhB,UAAsB,YAAXe,EAAsBlB,WALxB,SAACuB,GACrBN,EAAYM","file":"static/js/6.31acfbe4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3Ndw9\",\"loading\":\"QuoteForm_loading__iDpS0\",\"control\":\"QuoteForm_control__2lCiE\",\"actions\":\"QuoteForm_actions__354La\"};","import React from 'react';\n\nimport classes from './Card.module.css';\n\nconst Card = (props) => {\n   return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;","import React, { Fragment, useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n   const [isEntering, setIsEntering] = useState(false);\n   const authorInputRef = useRef();\n   const textInputRef = useRef();\n\n   function submitFormHandler(event) {\n      event.preventDefault();\n      const enteredAuthor = authorInputRef.current.value;\n      const enteredText = textInputRef.current.value;\n      // optional: Could validate here\n      props.onAddQuote({ author: enteredAuthor, text: enteredText });\n   };\n\n   const formFocusedHandler = () => {\n      setIsEntering(true);\n   };\n\n   const finishEnteringHandler = () => {\n      setIsEntering(false);\n   };\n\n   return (\n      <Fragment>\n         <Prompt when={isEntering} message={(location) => 'Are you sure you want to leave? All your entered data will be lost!'} />\n         <Card>\n            <form className={classes.form} onFocus={formFocusedHandler} onSubmit={submitFormHandler}>\n               {props.isLoading && (\n                  <div className={classes.loading}>\n                  <LoadingSpinner />\n                  </div>\n               )}\n\n               <div className={classes.control}>\n                  <label htmlFor=\"author\">Author</label>\n                  <input type=\"text\" id=\"author\" ref={authorInputRef} />\n               </div>\n               <div className={classes.control}>\n                  <label htmlFor=\"text\">Text</label>\n                  <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n               </div>\n               <div className={classes.actions}>\n                  <button className=\"btn\" onClick={finishEnteringHandler}>Add Quote</button>\n               </div>\n            </form>\n         </Card>\n      </Fragment>\n   );\n};\n\nexport default QuoteForm;","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport QuoteForm from '../components/quotes/QuoteForm';\n\nimport useHTTP from '../hooks/use-http';\nimport { addQuote } from '../lib/api';\n\nconst NewQuote = () => {\n   const { sendRequest, status } = useHTTP(addQuote);\n   const history = useHistory();\n\n   useEffect(() => {\n      if(status === 'completed') {\n         history.push('/quotes');\n      }\n   }, [status, history]);\n\n   const addQuoteHandler= (quoteData) => {\n      sendRequest(quoteData);\n   };\n\n   return (\n      <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler} />\n   );\n};\n\nexport default NewQuote;"],"sourceRoot":""}